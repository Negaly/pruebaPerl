#/usr/bin/perl
use strict;
use warnings;

use Getopt::Long;

use Path::Class;
use autodie; # die if problem reading or writing a file
# Lee los parámetros en una variable rh_params
my $rh_params = {};
GetOptions($rh_params,
  'directorio:s',
  'fichero:s',
  'max-lineas:i',
  'ayuda',
);

#Excepciones
if(defined $rh_params->{'directorio'}){
print ("Directorio introducido\n")}else{
$rh_params->{'directorio'}='./'};

#Constantes:
unless(defined $rh_params->{'max-lineas'}){
$rh_params->{'max-lineas'}=100};

if(defined $rh_params->{'ayuda'}){

print <<"END"
 
    Uso: leeTxt [parametros]
 
    Lee un fichero 
    Todos los parámetros son obligatorios si no se indica lo contrario:
 
          --fichero   : nombre del fichero a leer
          --directorio: nombre del directorio (./ si no lo pones)
          --max-lineas : numero máximo de lineas a procesar (default value 100)
          --ayuda     : imprime esta ayuda (opcional)
 
END
;


};
unless(defined $rh_params->{'fichero'}){
print "Introduzca el fichero que quiere leer, formato: -fichero 'fichero.txt' \n"  };


#Codigo para lectura
my $dir = dir($rh_params->{'directorio'}); # /tmp

my $file = $dir->file($rh_params->{'fichero'});

# Read in the entire contents of a file
my $content = $file->slurp();

# openr() returns an IO::File object to read from
my $file_handle = $file->openr();

# Read in line at a time
while( my $line = $file_handle->getline() ) {
        print $line;
	$rh_params->{'max-lineas'}--;
if($rh_params->{'max-lineas'}==0){last;};
}
